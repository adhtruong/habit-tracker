{"version":3,"sources":["features/selectors.ts","views/HabitDetail.tsx","features/habits/selectors.ts","features/habits/constants.ts","features/habits/reducer.ts","features/index.ts","store.ts","components/HabitAdder.tsx","features/habits/actions.ts","components/HabitEdit.tsx","components/HabitTable.tsx","views/HomePage.tsx","util/getDates.ts","App.tsx","index.tsx"],"names":["allHabits","state","habits","HabitDetail","habitId","habit","useSelector","id","find","makeGetHabit","name","HabitActionTypes","nextID","length","Math","max","apply","map","initialHabits","rootReducer","combineReducers","action","type","ADD_HABIT","newID","newHabit","events","payload","UPDATE_HABIT","DELETE_HABIT","filter","_persistantState","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","console","warn","loadFromLocalStorage","subscribe","throttle","stringify","setItem","saveToLocalStorage","getState","HabitAdder","useState","detail","input","setInput","Form","inline","Control","className","placeholder","value","onChange","target","Button","onClick","habitInput","preventDefault","dispatch","HabitEdit","handleClose","useDispatch","handleDelete","useCallback","deleteHabit","Modal","show","animation","onHide","Header","closeButton","Title","Body","Footer","window","confirm","variant","React","memo","HabitCell","ticked","toggleHabit","align","color","getRowData","dates","date","event","indexOf","toLocaleDateString","HabitRow","handleShow","isSelected","updatedHabit","push","toggleHabitEvent","getDate","HabitHeader","toString","split","getUTCDate","HabitTable","selectedHabit","setSelectedHabit","Table","responsive","striped","bordered","HomePage","number","Array","from","keys","i","d","Date","setDate","Container","fluid","Row","Col","App","path","render","match","Number","params","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a46a33ea.chunk.js","sourcesContent":["import { RootState } from \".\";\nimport * as habitSelectors from \"./habits/selectors\";\n\nexport const allHabits = (state: RootState): Habit[] =>\n  habitSelectors.allHabit(state.habits);\n\nexport const makeGetHabit = (\n  habitId: number,\n): ((state: RootState) => Habit | undefined) => (state: RootState) =>\n  habitSelectors.makeGetHabit(habitId)(state.habits);\n","import { useSelector } from \"react-redux\";\n\nimport { makeGetHabit } from \"../features/selectors\";\n\nexport function HabitDetail({ habitId }: { habitId: number }): JSX.Element {\n  const habit = useSelector(makeGetHabit(habitId));\n  if (!habit) return <div>Habit not found!</div>;\n  return <div>Habit {habit.name}</div>;\n}\n","import { HabitState } from \"./types\";\n\nexport const allHabit = (state: HabitState): Habit[] => state;\nexport const makeGetHabit = (id: number) => (\n  state: HabitState,\n): Habit | undefined => state.find((habit) => habit.id === id);\n","export enum HabitActionTypes {\n  ADD_HABIT = \"ADD_HABIT\",\n  UPDATE_HABIT = \"UPDATE_HABIT\",\n  DELETE_HABIT = \"DELETE_HABIT\",\n}\n","import { HabitActionTypes } from \"./constants\";\nimport { HabitState, HabitActionInterface } from \"./types\";\n\nconst nextID = (habits: Habit[]) => {\n  if (!habits.length) {\n    return 1;\n  }\n  const maxID = Math.max.apply(\n    null,\n    habits.map((habit) => habit.id),\n  );\n  return maxID + 1;\n};\n\nconst initialHabits: HabitState = [];\n\nexport default function habitReducer(\n  state = initialHabits,\n  action: HabitActionInterface,\n): HabitState {\n  switch (action.type) {\n    case HabitActionTypes.ADD_HABIT:\n      const newID = nextID(state);\n      const newHabit: Habit = { id: newID, events: [], ...action.payload };\n      return [...state, newHabit];\n    case HabitActionTypes.UPDATE_HABIT:\n      return state.map((habit) =>\n        habit.id === action.payload.id ? action.payload : habit,\n      );\n    case HabitActionTypes.DELETE_HABIT:\n      return state.filter((habit) => habit.id !== action.payload.id);\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport habitReducer from \"./habits/reducer\";\n\nconst rootReducer = combineReducers({\n  habits: habitReducer,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import throttle from \"lodash/throttle\";\nimport { createStore } from \"redux\";\n\nimport rootReducer, { RootState } from \"./features\";\n\nconst _persistantState = \"persitantState\";\n\nconst saveToLocalStorage = (state: RootState) => {\n  try {\n    const serialisedState = JSON.stringify(state);\n    localStorage.setItem(_persistantState, serialisedState);\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\nconst loadFromLocalStorage = () => {\n  try {\n    const serialisedState = localStorage.getItem(_persistantState);\n    if (serialisedState === null) return undefined;\n    return JSON.parse(serialisedState);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n};\n\nconst store = createStore(rootReducer, loadFromLocalStorage());\n\nstore.subscribe(throttle(() => saveToLocalStorage(store.getState()), 1000));\n\nexport default store;\n","import React, { useState } from \"react\";\n\nimport { Form, Button } from \"react-bootstrap\";\n\nimport { addHabit } from \"../features/habits/actions\";\nimport { HabitInput } from \"../features/habits/types\";\nimport store from \"../store\";\n\nconst HabitAdder = (): JSX.Element => {\n  const [input, setInput] = useState<HabitInput>({ name: \"\", detail: \"\" });\n\n  return (\n    <Form inline>\n      <Form.Control\n        className=\"mb-2 mr-sm-2\"\n        placeholder=\"Habit name...\"\n        type=\"text\"\n        value={input.name}\n        onChange={(e) => setInput({ ...input, name: e.target.value })}\n      />\n      <Form.Control\n        className=\"mb-2 mr-sm-2\"\n        placeholder=\"Details...\"\n        type=\"text\"\n        value={input.detail}\n        onChange={(e) => setInput({ ...input, detail: e.target.value })}\n      />\n      <Button\n        type=\"submit\"\n        className=\"mb-2 mr-sm-2\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (!input.name) return;\n          store.dispatch(addHabit(input));\n          setInput({ name: \"\", detail: \"\" });\n        }}\n      >\n        Add Habit\n      </Button>\n    </Form>\n  );\n};\n\nexport default HabitAdder;\n","import { HabitActionTypes } from \"./constants\";\nimport { HabitInput, HabitActionInterface } from \"./types\";\n\nexport function addHabit(habitInput: HabitInput): HabitActionInterface {\n  return {\n    type: HabitActionTypes.ADD_HABIT,\n    payload: habitInput,\n  };\n}\n\nexport function updateHabit(habit: Habit): HabitActionInterface {\n  return {\n    type: HabitActionTypes.UPDATE_HABIT,\n    payload: habit,\n  };\n}\n\nexport function toggleHabitEvent(\n  habit: Habit,\n  date: Date,\n): HabitActionInterface {\n  const isSelected =\n    habit.events\n      .map((event) => event.date)\n      .indexOf(date.toLocaleDateString()) !== -1;\n\n  const updatedHabit = habit;\n  if (isSelected)\n    updatedHabit.events = updatedHabit.events.filter(\n      (event) => event.date !== date.toLocaleDateString(),\n    );\n  else updatedHabit.events.push({ date: date.toLocaleDateString() });\n\n  return {\n    type: HabitActionTypes.UPDATE_HABIT,\n    payload: updatedHabit,\n  };\n}\n\nexport function deleteHabit(habit: Habit): HabitActionInterface {\n  return {\n    type: HabitActionTypes.DELETE_HABIT,\n    payload: habit,\n  };\n}\n","import React, { useCallback } from \"react\";\n\nimport { Button, Modal } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\n\nimport { deleteHabit } from \"../features/habits/actions\";\n\ninterface Props {\n  handleClose: () => void;\n  habit: Habit | null;\n}\n\nconst HabitEdit = ({ handleClose, habit }: Props): JSX.Element => {\n  if (!habit) {\n    return <div></div>;\n  }\n\n  const dispatch = useDispatch();\n  const handleDelete = useCallback(() => dispatch(deleteHabit(habit)), [\n    dispatch,\n  ]);\n\n  return (\n    <Modal show={!!habit} animation={false} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{habit.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {habit.detail ? <p>{habit.detail}</p> : \"\"}\n        <p>Habit occurred {habit.events.length} times.</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() => {\n            if (!window.confirm(\"Are you sure you wish to delete this item?\"))\n              return;\n            handleDelete();\n            handleClose();\n          }}\n        >\n          Delete\n        </Button>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default React.memo(HabitEdit);\n","import React, { useState } from \"react\";\n\nimport Table from \"react-bootstrap/Table\";\nimport { HiCheck, HiX } from \"react-icons/hi\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { toggleHabitEvent } from \"../features/habits/actions\";\nimport { allHabits } from \"../features/selectors\";\nimport HabitEdit from \"./HabitEdit\";\n\ninterface RowProps {\n  habit: Habit;\n  dates: Date[];\n  handleShow: (habit: Habit) => void;\n}\n\ninterface CellProps {\n  ticked: boolean;\n  date: Date;\n  toggleHabit: () => void;\n}\n\nconst HabitCell: React.FC<CellProps> = ({ ticked, toggleHabit }) => {\n  return (\n    <td align=\"center\" onClick={toggleHabit}>\n      {ticked ? <HiCheck /> : <HiX color=\"grey\" />}\n    </td>\n  );\n};\n\nfunction getRowData(habit: Habit, dates: Date[]) {\n  return dates.map((date) => ({\n    date: date,\n    ticked:\n      habit.events\n        .map((event) => event.date)\n        .indexOf(date.toLocaleDateString()) !== -1,\n  }));\n}\n\nconst HabitRow: React.FC<RowProps> = ({ habit, dates, handleShow }) => {\n  const dispatch = useDispatch();\n  return (\n    <tr>\n      <td key={habit.name} onClick={() => handleShow(habit)}>\n        {habit.name}\n      </td>\n      {getRowData(habit, dates).map(({ ticked, date }) => {\n        return (\n          <HabitCell\n            key={date.getDate()}\n            ticked={ticked}\n            date={date}\n            toggleHabit={() => dispatch(toggleHabitEvent(habit, date))}\n          />\n        );\n      })}\n    </tr>\n  );\n};\n\ntype HeaderProps = {\n  dates: Date[];\n};\n\nconst HabitHeader: React.FC<HeaderProps> = ({ dates }: HeaderProps) => {\n  return (\n    <thead>\n      <th key=\"title\">Habit</th>\n      {dates.map((date) => (\n        // TODO clean up\n        <th className=\"text-center\" key={date.getUTCDate()}>\n          {date.toString().split(\" \")[0] + \" \" + date.getDate()}\n        </th>\n      ))}\n    </thead>\n  );\n};\n\nfunction HabitTable({ dates }: { dates: Date[] }): JSX.Element {\n  const habits = useSelector(allHabits);\n\n  const [selectedHabit, setSelectedHabit] = useState<Habit | null>(null);\n\n  const handleClose = () => setSelectedHabit(null);\n  const handleShow = (habit: Habit) => setSelectedHabit(habit);\n\n  return (\n    <>\n      <Table responsive striped bordered>\n        <HabitHeader dates={dates} />\n        <tbody>\n          {habits.map((habit) => (\n            <HabitRow\n              key={habit.id}\n              habit={habit}\n              dates={dates}\n              handleShow={handleShow}\n            />\n          ))}\n        </tbody>\n      </Table>\n\n      <HabitEdit handleClose={handleClose} habit={selectedHabit}></HabitEdit>\n    </>\n  );\n}\n\nexport default HabitTable;\n","import React from \"react\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport HabitAdder from \"../components/HabitAdder\";\nimport HabitTable from \"../components/HabitTable\";\nimport { getDates } from \"../util/getDates\";\n\nexport function HomePage(): JSX.Element {\n  const dates = getDates(7);\n  return (\n    <Container fluid=\"md\">\n      <Row className=\"p-2\">\n        <Col>\n          <HabitAdder />\n        </Col>\n      </Row>\n      <Row className=\"p-2\">\n        <Col>\n          <HabitTable dates={dates} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","export function getDates(number: number): Date[] {\n  const days = Array.from(Array(number).keys());\n  return days.map((i) => {\n    const d = new Date();\n    d.setDate(d.getDate() - i);\n    return d;\n  });\n}\n\nexport const getDateString = (date: Date): string =>\n  date.toISOString().substring(0, 10);\n","import React from \"react\";\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { HabitDetail } from \"./views/HabitDetail\";\nimport { HomePage } from \"./views/HomePage\";\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <div className=\"App p-4\">\n        <h1 className=\"text-center\">Habit Tracker</h1>\n        <Switch>\n          <Route\n            path=\"/habit/:id(\\d+)\"\n            render={({ match }: RouteComponentProps<{ id: string }>) => {\n              return <HabitDetail habitId={Number(match.params.id)} />;\n            }}\n          />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}