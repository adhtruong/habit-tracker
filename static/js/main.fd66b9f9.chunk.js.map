{"version":3,"sources":["features/habits/types.ts","features/habits/reducer.ts","features/index.ts","store.ts","components/HabitAdder.tsx","features/habits/actions.ts","components/HabitEdit.tsx","components/HabitTable.tsx","App.tsx","getDates.ts","index.tsx"],"names":["HabitActionTypes","nextID","habits","length","Math","max","apply","map","habit","id","initialHabits","rootReducer","combineReducers","state","action","type","ADD_HABIT","newID","newHabit","events","payload","UPDATE_HABIT","DELETE_HABIT","filter","store","createStore","HabitAdder","useState","name","detail","input","setInput","Form","inline","Control","className","placeholder","value","onChange","e","target","Button","onClick","habitInput","preventDefault","dispatch","HabitEdit","handleClose","Modal","show","animation","onHide","Header","closeButton","Title","Body","Footer","window","confirm","deleteHabit","variant","HabitCell","ticked","toggleHabit","getRowData","dates","date","event","toDateString","indexOf","HabitRow","handleShow","useDispatch","isSelected","updatedHabit","getDate","push","toggleHabitEvent","allHabit","HabitTable","useSelector","selectedHabit","setSelectedHabit","Table","responsive","striped","bordered","toLocaleDateString","App","number","Array","from","keys","i","d","Date","setDate","Container","fluid","Row","Col","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd66b9f9.chunk.js","sourcesContent":["export interface HabitInput {\n  name: string;\n  detail: string;\n}\n\nexport interface HabitState {\n  habits: Habit[];\n}\n\nexport enum HabitActionTypes {\n  ADD_HABIT = \"ADD_HABIT\",\n  UPDATE_HABIT = \"UPDATE_HABIT\",\n  DELETE_HABIT = \"DELETE_HABIT\",\n}\n\ninterface AddHabitAction {\n  type: HabitActionTypes.ADD_HABIT;\n  payload: HabitInput;\n}\n\ninterface UpdateHabitAction {\n  type: HabitActionTypes.UPDATE_HABIT;\n  payload: Habit;\n}\n\ninterface DeleteHabitAction {\n  type: HabitActionTypes.DELETE_HABIT;\n  payload: Habit;\n}\n\nexport type HabitActionInterface =\n  | AddHabitAction\n  | UpdateHabitAction\n  | DeleteHabitAction;\n","import { HabitActionTypes, HabitState, HabitActionInterface } from \"./types\";\n\nconst nextID = (habits: Habit[]) => {\n  if (!habits.length) {\n    return 1;\n  }\n  const maxID = Math.max.apply(\n    null,\n    habits.map((habit) => habit.id),\n  );\n  return maxID + 1;\n};\n\nconst initialHabits: HabitState = { habits: [] };\n\nexport default function habitReducer(\n  state = initialHabits,\n  action: HabitActionInterface,\n): HabitState {\n  switch (action.type) {\n    case HabitActionTypes.ADD_HABIT:\n      const newID = nextID(state.habits);\n      const newHabit: Habit = { id: newID, events: [], ...action.payload };\n      return {\n        habits: [...state.habits, newHabit],\n      };\n    case HabitActionTypes.UPDATE_HABIT:\n      return {\n        habits: state.habits.map((habit) =>\n          habit.id === action.payload.id ? action.payload : habit,\n        ),\n      };\n    case HabitActionTypes.DELETE_HABIT:\n      return {\n        habits: state.habits.filter((habit) => habit.id === action.payload.id),\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport habitReducer from \"./habits/reducer\";\n\nconst rootReducer = combineReducers({\n  habits: habitReducer,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./features\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React, { useState } from \"react\";\n\nimport { Form, Button } from \"react-bootstrap\";\n\nimport { addHabit } from \"../features/habits/actions\";\nimport { HabitInput } from \"../features/habits/types\";\nimport store from \"../store\";\n\nconst HabitAdder = (): JSX.Element => {\n  const [input, setInput] = useState<HabitInput>({ name: \"\", detail: \"\" });\n\n  return (\n    <Form inline>\n      <Form.Control\n        className=\"mb-2 mr-sm-2\"\n        placeholder=\"Habit name...\"\n        type=\"text\"\n        value={input.name}\n        onChange={(e) => setInput({ ...input, name: e.target.value })}\n      />\n      <Form.Control\n        className=\"mb-2 mr-sm-2\"\n        placeholder=\"Details...\"\n        type=\"text\"\n        value={input.detail}\n        onChange={(e) => setInput({ ...input, detail: e.target.value })}\n      />\n      <Button\n        type=\"submit\"\n        className=\"mb-2 mr-sm-2\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (!input.name) return;\n          store.dispatch(addHabit(input));\n          setInput({ name: \"\", detail: \"\" });\n        }}\n      >\n        Add Habit\n      </Button>\n    </Form>\n  );\n};\n\nexport default HabitAdder;\n","import { HabitInput, HabitActionInterface, HabitActionTypes } from \"./types\";\n\nexport function addHabit(habitInput: HabitInput): HabitActionInterface {\n  return {\n    type: HabitActionTypes.ADD_HABIT,\n    payload: habitInput,\n  };\n}\n\nexport function updateHabit(habit: Habit): HabitActionInterface {\n  return {\n    type: HabitActionTypes.UPDATE_HABIT,\n    payload: habit,\n  };\n}\n\nexport function toggleHabitEvent(\n  habit: Habit,\n  date: Date,\n): HabitActionInterface {\n  const isSelected =\n    habit.events\n      .map((event) => event.date.toDateString())\n      .indexOf(date.toDateString()) !== -1;\n\n  const updatedHabit = habit;\n  if (isSelected)\n    updatedHabit.events = updatedHabit.events.filter(\n      (event) => event.date.getDate() !== date.getDate(),\n    );\n  else updatedHabit.events.push({ date: date });\n\n  return {\n    type: HabitActionTypes.UPDATE_HABIT,\n    payload: updatedHabit,\n  };\n}\n\nexport function deleteHabit(habit: Habit): HabitActionInterface {\n  return {\n    type: HabitActionTypes.DELETE_HABIT,\n    payload: habit,\n  };\n}\n","import React from \"react\";\n\nimport { Button, Modal } from \"react-bootstrap\";\n\nimport { deleteHabit } from \"../features/habits/actions\";\nimport store from \"../store\";\n\ninterface Props {\n  handleClose: () => void;\n  habit: Habit | null;\n}\n\nconst HabitEdit = ({ handleClose, habit }: Props): JSX.Element => {\n  if (!habit) {\n    return <div></div>;\n  }\n\n  return (\n    <Modal show={habit !== null} animation={false} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{habit.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {habit.detail ? <p>{habit.detail}</p> : \"\"}\n        <p>Habit occurred {habit.events.length} times.</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() => {\n            if (!window.confirm(\"Are you sure you wish to delete this item?\"))\n              return;\n            store.dispatch(deleteHabit(habit));\n            handleClose();\n          }}\n        >\n          Delete\n        </Button>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default HabitEdit;\n","import React, { useState } from \"react\";\n\nimport Table from \"react-bootstrap/Table\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { RootState } from \"../features\";\nimport { toggleHabitEvent } from \"../features/habits/actions\";\nimport HabitEdit from \"./HabitEdit\";\n\ninterface RowProps {\n  habit: Habit;\n  dates: Date[];\n  handleShow: (habit: Habit) => void;\n}\n\ninterface CellProps {\n  ticked: boolean;\n  date: Date;\n  toggleHabit: () => void;\n}\n\nconst HabitCell: React.FC<CellProps> = ({ ticked, toggleHabit }) => {\n  return <td onClick={toggleHabit}>{ticked ? 1 : 0}</td>;\n};\n\nfunction getRowData(habit: Habit, dates: Date[]) {\n  return dates.map((date) => ({\n    date: date,\n    ticked:\n      habit.events\n        .map((event) => event.date.toDateString())\n        .indexOf(date.toDateString()) !== -1,\n  }));\n}\n\nconst HabitRow: React.FC<RowProps> = ({ habit, dates, handleShow }) => {\n  const dispatch = useDispatch();\n  return (\n    <tr>\n      <td key={habit.name} onClick={() => handleShow(habit)}>\n        {habit.name}\n      </td>\n      {getRowData(habit, dates).map(({ ticked, date }) => {\n        return (\n          <HabitCell\n            key={date.getDate()}\n            ticked={ticked}\n            date={date}\n            toggleHabit={() => dispatch(toggleHabitEvent(habit, date))}\n          />\n        );\n      })}\n    </tr>\n  );\n};\n\nconst allHabit = (state: RootState) => state.habits.habits;\n\nfunction HabitTable({ dates }: { dates: Date[] }): JSX.Element {\n  const habits = useSelector(allHabit);\n\n  const [selectedHabit, setSelectedHabit] = useState<Habit | null>(null);\n\n  const handleClose = () => setSelectedHabit(null);\n  const handleShow = (habit: Habit) => setSelectedHabit(habit);\n\n  return (\n    <>\n      <Table responsive striped bordered>\n        <thead>\n          <tr>\n            <th key=\"title\">Habit</th>\n            {dates.map((date) => (\n              <th key={date.getDate()}>{date.toLocaleDateString()}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {habits.map((habit) => (\n            <HabitRow\n              key={habit.id}\n              habit={habit}\n              dates={dates}\n              handleShow={handleShow}\n            />\n          ))}\n        </tbody>\n      </Table>\n\n      <HabitEdit handleClose={handleClose} habit={selectedHabit}></HabitEdit>\n    </>\n  );\n}\n\nexport default HabitTable;\n","import React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n// import HabitList from \"./components/HabitList\";\nimport HabitAdder from \"./components/HabitAdder\";\nimport HabitTable from \"./components/HabitTable\";\nimport { getDates } from \"./getDates\";\n\nfunction App(): JSX.Element {\n  const dates = getDates(7);\n\n  return (\n    <div className=\"App p-4\">\n      <h1 className=\"text-center\">Habit Tracker</h1>\n      <Container fluid=\"md\">\n        {/* <Row className=\"p-2\">\n          <Col>\n            <HabitList habits={habits} />\n          </Col>\n        </Row> */}\n        <Row className=\"p-2\">\n          <Col>\n            <HabitAdder />\n          </Col>\n        </Row>\n        <Row className=\"p-2\">\n          <Col>\n            <HabitTable dates={dates} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","export function getDates(number: number): Date[] {\n  const days = Array.from(Array(number).keys());\n  return days.map((i) => {\n    const d = new Date();\n    d.setDate(d.getDate() - i);\n    return d;\n  });\n}\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}